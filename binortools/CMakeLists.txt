project(binortools)
cmake_minimum_required(VERSION 3.10)

if( ${CMAKE_SYSTEM_NAME} STREQUAL "Linux" AND ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
    set( ORTOOLS_LIB_PATH_ROOT ${CMAKE_CURRENT_SOURCE_DIR}/${CMAKE_SYSTEM_PROCESSOR})
elseif( ${CMAKE_SYSTEM_NAME} STREQUAL "Linux" AND (CMAKE_SYSTEM_PROCESSOR MATCHES ".*arm") )
    set( ORTOOLS_LIB_PATH_ROOT ${CMAKE_CURRENT_SOURCE_DIR}/arm32)
#elseif( ${CMAKE_SYSTEM_NAME} STREQUAL "Linux" AND (CMAKE_SYSTEM_PROCESSOR MATCHES ".*aarch64") )
#    set( ORTOOLS_LIB_PATH_ROOT ${CMAKE_CURRENT_SOURCE_DIR}/arm64)
else()
    MESSAGE("Unsupported pre-built ortools")
endif()

find_path(ORTOOLS_INCLUDE_DIR
        NAMES ortools_export.h
        PATHS ${ORTOOLS_LIB_PATH_ROOT}/include
        )
set(ORTOOLS_INCLUDE_DIR ${ORTOOLS_INCLUDE_DIR} PARENT_SCOPE)

find_library(ORTOOLS_SHARED_LIB
        NAMES ortools
        PATHS ${ORTOOLS_LIB_PATH_ROOT}/lib)
set(ORTOOLS_SHARED_LIB_DIR ${ORTOOLS_LIB_PATH_ROOT}/lib PARENT_SCOPE)

MESSAGE("binortools ORTOOLS_SHARED_LIB = ${ORTOOLS_SHARED_LIB} OR_INCLUDE = ${ORTOOLS_INCLUDE_DIR}" )


# WORKING STATIC LIB USE OUTSIDE OF LIBROMI (LINK ERROR)

# LIB CREATION
#ls *.a | xargs -I {} ar -xv {}
#ar r libortools_static.a *.o
#ranlib libortools_static.a

#find_path(ORTOOLS_INCLUDE_DIR
#        NAMES ortools_export.h
#        PATHS ${ORTOOLS_LIB_PATH_ROOT}/include
#        )
#set(ORTOOLS_INCLUDE_DIR ${ORTOOLS_INCLUDE_DIR} PARENT_SCOPE)
#
#find_library(ORTOOLS_STATIC_LIB
#        NAMES ortools_static
#        PATHS ${ORTOOLS_LIB_PATH_ROOT}/lib)
#
#MESSAGE("binortools ORTOOLS_STATIC_LIB = ${ORTOOLS_STATIC_LIB} OR_INCLUDE = ${ORTOOLS_INCLUDE_DIR}" )




# WORKING LIST OF STATIC LIBS PASSED UP TO PARENT. SAME LINK ERROR AS ABOVE

#find_path(ORTOOLS_INCLUDE_DIR
#        NAMES ortools_export.h
#        PATHS ${ORTOOLS_LIB_PATH_ROOT}/include
#        )
#set(ORTOOLS_INCLUDE_DIR ${ORTOOLS_INCLUDE_DIR} PARENT_SCOPE)
#file(GLOB_RECURSE ORTOOLS_STATIC_LIBS "${ORTOOLS_LIB_PATH_ROOT}/lib/*.a")
#set(ORTOOLS_STATIC_LIBS ${ORTOOLS_STATIC_LIBS} PARENT_SCOPE)
#MESSAGE("binortools ORTOOLS_STATIC_LIBS = ${ORTOOLS_STATIC_LIBS} OR_INCLUDE = ${ORTOOLS_INCLUDE_DIR}" )